"use strict";(self.webpackChunksophgo_wiki_1=self.webpackChunksophgo_wiki_1||[]).push([[481],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>m});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var c=n.createContext({}),s=function(e){var t=n.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},p=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=s(o),d=r,m=f["".concat(c,".").concat(d)]||f[d]||u[d]||i;return o?n.createElement(m,a(a({ref:t},p),{},{components:o})):n.createElement(m,a({ref:t},p))}));function m(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,a=new Array(i);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[f]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=o[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},1565:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=o(7462),r=(o(7294),o(3905));const i={},a="SG2042 Boot Flow",l={unversionedId:"sg2042/bootflow",id:"sg2042/bootflow",title:"SG2042 Boot Flow",description:"1.  Fip.bin",source:"@site/docs/sg2042/bootflow.md",sourceDirName:"sg2042",slug:"/sg2042/bootflow",permalink:"/SG2042-Wiki/docs/sg2042/bootflow",draft:!1,editUrl:"https://github.com/sophgocommunity/SG2042-Wiki/tree/docusaurus/docs/sg2042/bootflow.md",tags:[],version:"current",frontMatter:{},sidebar:"techSidebar",previous:{title:"How to build and config GRUB2",permalink:"/SG2042-Wiki/docs/sg2042/How to build and config grub2"}},c={},s=[],p={toc:s},f="wrapper";function u(e){let{components:t,...i}=e;return(0,r.kt)(f,(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"sg2042-boot-flow"},"SG2042 Boot Flow"),(0,r.kt)("p",null,(0,r.kt)("img",{src:o(2141).Z,width:"849",height:"1482"})),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Fip.bin"),(0,r.kt)("li",{parentName:"ol"},"ZSBL (Zero Stage Bootloader): Code in the ROM of the board to\ninitial DDR, CPU and Ethernet. Then load OpneSBI and U-Boot."),(0,r.kt)("li",{parentName:"ol"},"OpenSBI (RISC-V Open Source Supervisor Binary Interface): The goal\nof the OpenSBI project is to provide an open-source reference\nimplementation of the RISC-V SBI specifications for\nplatform-specific firmwares executing in M-mode. An OpenSBI\nimplementation can be easily extended by RISC-V platform and\nsystem-on-chip vendors to fit a particular hardware configuration."),(0,r.kt)("li",{parentName:"ol"},"conf.ini: configuration file used to choose next bootloader."),(0,r.kt)("li",{parentName:"ol"},"LinuxBoot: LinuxBoot is a firmware for modern servers that replaces\nspecific firmware functionality like the UEFI DXE phase with a Linux\nkernel and runtime."),(0,r.kt)("li",{parentName:"ol"},"U-Boot (Universal Bootloader): Its primary role is to facilitate the\nbooting process of the embedded device."),(0,r.kt)("li",{parentName:"ol"},"GRUB2 (GRand Unified Bootloader version 2): It is responsible for\nloading and transferring control to an operating system kernel\nsoftware (such as Linux or GNU Mach). The kernel, in turn,\ninitializes the rest of the operating system (e.g. a GNU system)."),(0,r.kt)("li",{parentName:"ol"},"Kernel")))}u.isMDXComponent=!0},2141:(e,t,o)=>{o.d(t,{Z:()=>n});const n=o.p+"assets/images/bootflow-aa14e2e7fcdc520a41fd8ed19a94f9a6.png"}}]);