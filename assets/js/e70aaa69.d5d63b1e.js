"use strict";(self.webpackChunksophgo_wiki_1=self.webpackChunksophgo_wiki_1||[]).push([[791],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=u(n),p=r,k=d["".concat(l,".").concat(p)]||d[p]||m[p]||a;return n?o.createElement(k,i(i({ref:t},c),{},{components:n})):o.createElement(k,i({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8235:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const a={},i="A Simple Method to Install Ubuntu Image on SG2042 EVB",s={unversionedId:"sg2042/A simple way to install ubuntu on SG2042 EVB",id:"sg2042/A simple way to install ubuntu on SG2042 EVB",title:"A Simple Method to Install Ubuntu Image on SG2042 EVB",description:"1. Prerequisites",source:"@site/docs/sg2042/A simple way to install ubuntu on SG2042 EVB.md",sourceDirName:"sg2042",slug:"/sg2042/A simple way to install ubuntu on SG2042 EVB",permalink:"/SG2042-Wiki/docs/sg2042/A simple way to install ubuntu on SG2042 EVB",draft:!1,editUrl:"https://github.com/sophgocommunity/SG2042-Wiki/tree/docusaurus/docs/sg2042/A simple way to install ubuntu on SG2042 EVB.md",tags:[],version:"current",frontMatter:{},sidebar:"techSidebar",previous:{title:"SG2042",permalink:"/SG2042-Wiki/docs/sg2042"},next:{title:"Configuration Info in conf.ini",permalink:"/SG2042-Wiki/docs/sg2042/Configuration Info in INI file"}},l={},u=[{value:"1. Prerequisites",id:"1-prerequisites",level:2},{value:"2. Get an Ubuntu Image",id:"2-get-an-ubuntu-image",level:2},{value:"1. Create a Bootable microSD Card",id:"1-create-a-bootable-microsd-card",level:2},{value:"Option 1: Use balenaEtcher",id:"option-1-use-balenaetcher",level:3},{value:"Option 2: Use <code>dd</code> command directly",id:"option-2-use-dd-command-directly",level:3},{value:"4. Boot from microSD Card",id:"4-boot-from-microsd-card",level:2},{value:"5. Use NVMe SSD and microSD Card",id:"5-use-nvme-ssd-and-microsd-card",level:2}],c={toc:u},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"a-simple-method-to-install-ubuntu-image-on-sg2042-evb"},"A Simple Method to Install Ubuntu Image on SG2042 EVB"),(0,r.kt)("h2",{id:"1-prerequisites"},"1. Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Computer with Linux OS"),(0,r.kt)("li",{parentName:"ul"},"SG2042 EVB"),(0,r.kt)("li",{parentName:"ul"},"microSD Card (16GB or above), microSD Card Reader"),(0,r.kt)("li",{parentName:"ul"},"NVMe SSD"),(0,r.kt)("li",{parentName:"ul"},"Serial Cable (Micro USB - USB)")),(0,r.kt)("h2",{id:"2-get-an-ubuntu-image"},"2. Get an Ubuntu Image"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Dowload the ",(0,r.kt)("a",{parentName:"p",href:"http://219.142.246.77:65000/sharing/agK6z51jP"},"Ubuntu\nimage")," directly."),(0,r.kt)("p",{parentName:"li"},"The image is created based on Ubuntu offical preinstall server\nimage.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Or use your own compiled ",(0,r.kt)("inlineCode",{parentName:"p"},"ubuntu-sophgo.img")," exiting in the\n",(0,r.kt)("inlineCode",{parentName:"p"},"install/soc_mango/riscv64")," directory."))),(0,r.kt)("p",null,"The following uses ",(0,r.kt)("inlineCode",{parentName:"p"},"ubuntu-sophgo.img")," to refer to the Ubuntu image."),(0,r.kt)("h2",{id:"1-create-a-bootable-microsd-card"},"1. Create a Bootable microSD Card"),(0,r.kt)("h3",{id:"option-1-use-balenaetcher"},"Option 1: Use balenaEtcher"),(0,r.kt)("p",null,"a.  Download and install the\n",(0,r.kt)("a",{parentName:"p",href:"https://www.balena.io/etcher"},"balenaEtcher"),".\nb.  Click on the ",(0,r.kt)("strong",{parentName:"p"},"Flash from file")," button and choose the\n",(0,r.kt)("inlineCode",{parentName:"p"},"ubuntu-sophgo.img")," you want to use.\nc.  Click the ",(0,r.kt)("strong",{parentName:"p"},"Select target")," button and choose the microSD Card to\nwrite the ",(0,r.kt)("inlineCode",{parentName:"p"},"ubuntu-sophgo.img")," to.\nd.  Click the ",(0,r.kt)("strong",{parentName:"p"},"Flash!")," button to begin the process."),(0,r.kt)("h3",{id:"option-2-use-dd-command-directly"},"Option 2: Use ",(0,r.kt)("inlineCode",{parentName:"h3"},"dd")," command directly"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use ",(0,r.kt)("inlineCode",{parentName:"li"},"dd")," command to write ",(0,r.kt)("inlineCode",{parentName:"li"},"ubuntu-sophgo.img")," to microSD Card")),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# To find the block device name of your microSD Card.\n# For example, the microSD Card drive is /dev/sdc. Checking the name of your device is a key step,\n# as writing to the wrong device might corrupt or destroy your data.\n\n$ sudo dd if=ubuntu-sophgo.img of=/dev/sdc bs=1M\n\n10240+0 records in\n10240+0 records out\n10737418240 bytes (11 GB, 10 GiB) copied, 1211.08 s, 8.9 MB/s\n"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Resize root partition of microSD Card (",(0,r.kt)("strong",{parentName:"li"},"Optional"),")")),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# Change partition table of your microSD Card.\n$ sudo fdisk /dev/sdc\n\nWelcome to fdisk (util-linux 2.37.2).\nChanges will remain in memory only, until you decide to write them.\nBe careful before using the write command.\n\n\nCommand (m for help): p\nDisk /dev/sdc: 29.72 GiB, 31914983424 bytes, 62333952 sectors\nDisk model: MassStorageClass\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: dos\nDisk identifier: 0x5c9f9baa\n\nDevice     Boot  Start      End Sectors  Size Id Type\n/dev/sdc1         2048   262143  260096  127M  c W95 FAT32 (LBA)\n/dev/sdc2       262144   524287  262144  128M  c W95 FAT32 (LBA)\n/dev/sdc3       524288 10485759 9961472  4.8G 83 Linux\n\nCommand (m for help): d\nPartition number (1-3, default 3): 3\n\nPartition 3 has been deleted.\n\nCommand (m for help): n\nPartition type\np   primary (2 primary, 0 extended, 2 free)\ne   extended (container for logical partitions)\nSelect (default p): p\nPartition number (3,4, default 3):\nFirst sector (524288-62333951, default 524288):\nLast sector, +/-sectors or +/-size{K,M,G,T,P} (524288-62333951, default 62333951):\n\nCreated a new partition 3 of type 'Linux' and of size 29.5 GiB.\nPartition #3 contains a ext4 signature.\n\nDo you want to remove the signature? [Y]es/[N]o: N\n\nCommand (m for help): w\n\nThe partition table has been altered.\nCalling ioctl() to re-read partition table.\nSyncing disks.\n"))),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# Check partitions of your microSD Card.\n$ sudo fdisk -l /dev/sdc\n\nDisk /dev/sdc: 29.72 GiB, 31914983424 bytes, 62333952 sectors\nDisk model: MassStorageClass\nUnits: sectors of 1 * 512 = 512 bytes\nSector size (logical/physical): 512 bytes / 512 bytes\nI/O size (minimum/optimal): 512 bytes / 512 bytes\nDisklabel type: dos\nDisk identifier: 0x5c9f9baa\n\nDevice     Boot  Start      End  Sectors  Size Id Type\n/dev/sdc1         2048   262143   260096  127M  c W95 FAT32 (LBA)\n/dev/sdc2       262144   524287   262144  128M  c W95 FAT32 (LBA)\n/dev/sdc3       524288 62333951 61809664 29.5G 83 Linux\n"))),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# Force checking your file system.\n$ sudo e2fsck -f /dev/sdc3\n\ne2fsck 1.46.5 (30-Dec-2021)\nPass 1: Checking inodes, blocks, and sizes\nPass 2: Checking directory structure\nPass 3: Checking directory connectivity\nPass 4: Checking reference counts\nPass 5: Checking group summary information\ncloudimg-rootfs: 79598/575424 files (0.0% non-contiguous), 1022378/1150203 blocks\nxingxg@vmware:~/sophgo/install/soc_mango/riscv64$ sudo resize2fs /dev/sdc3\nresize2fs 1.46.5 (30-Dec-2021)\nResizing the filesystem on /dev/sdc3 to 7726208 (4k) blocks.\nThe filesystem on /dev/sdc3 is now 7726208 (4k) blocks long.\n"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Copy image to ",(0,r.kt)("inlineCode",{parentName:"li"},"/home/ubuntu")," on the root partition of the microSD\nCard.")),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ cp ubuntu-sophgo.img /mnt/home/ubuntu\n"))),(0,r.kt)("h2",{id:"4-boot-from-microsd-card"},"4. Boot from microSD Card"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Plug the microSD Card into the SG2042 EVB, connect the serial cable\nto your computer, and power on the EVB."),(0,r.kt)("li",{parentName:"ul"},"Enter the username ",(0,r.kt)("inlineCode",{parentName:"li"},"ubuntu")," and the password ",(0,r.kt)("inlineCode",{parentName:"li"},"ubuntu"),"."),(0,r.kt)("li",{parentName:"ul"},"Any operation needs the ",(0,r.kt)("inlineCode",{parentName:"li"},"sudo")," privilege.")),(0,r.kt)("h2",{id:"5-use-nvme-ssd-and-microsd-card"},"5. Use NVMe SSD and microSD Card"),(0,r.kt)("p",null,"If you want to boot your system from a combination of NVMe SSD and\nmicroSD Card, the following steps also need to be done."),(0,r.kt)("p",null,"a.  Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"dd")," command to copy the ",(0,r.kt)("inlineCode",{parentName:"p"},"ubuntu-sophgo.img")," to the NVMe\ndisk."),(0,r.kt)("p",null,"b.  Resize the root partition of the NVMe disk."),(0,r.kt)("p",null,"c.  Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"fdisk")," command to delete the root partition of the microSD\nCard."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"> ::: note\n> ::: title\n> Note\n> :::\n>\n> This step is critical because the root partition of the microSD\n> Card and the NVMe disk has the same label!\n> :::\n")),(0,r.kt)("p",null,"d.  Reboot, and access Ubuntu using the NVMe disk."))}m.isMDXComponent=!0}}]);