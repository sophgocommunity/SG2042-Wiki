"use strict";(self.webpackChunksophgo_wiki_1=self.webpackChunksophgo_wiki_1||[]).push([[802],{3905:(e,t,o)=>{o.d(t,{Zo:()=>u,kt:()=>k});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(o),m=r,k=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return o?n.createElement(k,i(i({ref:t},u),{},{components:o})):n.createElement(k,i({ref:t},u))}));function k(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=o[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}m.displayName="MDXCreateElement"},8190:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=o(7462),r=(o(7294),o(3905));const a={},i="How to Adapt Anolis OS on SG2042 EVB",l={unversionedId:"sg2042/How to Adapt Anolis OS on SG2042 EVB",id:"sg2042/How to Adapt Anolis OS on SG2042 EVB",title:"How to Adapt Anolis OS on SG2042 EVB",description:"1. Prerequisites",source:"@site/docs/sg2042/How to Adapt Anolis OS on SG2042 EVB.md",sourceDirName:"sg2042",slug:"/sg2042/How to Adapt Anolis OS on SG2042 EVB",permalink:"/SG2042-Wiki/docs/sg2042/How to Adapt Anolis OS on SG2042 EVB",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"techSidebar",previous:{title:"FAQ",permalink:"/SG2042-Wiki/docs/sg2042/FAQ"},next:{title:"How to build bsp",permalink:"/SG2042-Wiki/docs/sg2042/How to build SG2042 bsp"}},s={},p=[{value:"1. Prerequisites",id:"1-prerequisites",level:2},{value:"2. Adjust SD partitions",id:"2-adjust-sd-partitions",level:2},{value:"3. Add content to the partitions",id:"3-add-content-to-the-partitions",level:2},{value:"Step 1: Copy firmware into EFI partition",id:"step-1-copy-firmware-into-efi-partition",level:3},{value:"Step 2: Create ROOT partition content",id:"step-2-create-root-partition-content",level:3},{value:"Step 3: Enter BOOT partition and add boot file",id:"step-3-enter-boot-partition-and-add-boot-file",level:3},{value:"4. Boot from microSD Card",id:"4-boot-from-microsd-card",level:2}],u={toc:p},d="wrapper";function c(e){let{components:t,...o}=e;return(0,r.kt)(d,(0,n.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"how-to-adapt-anolis-os-on-sg2042-evb"},"How to Adapt Anolis OS on SG2042 EVB"),(0,r.kt)("h2",{id:"1-prerequisites"},"1. Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Computer with Linux OS"),(0,r.kt)("li",{parentName:"ul"},"SG2042 EVB"),(0,r.kt)("li",{parentName:"ul"},"microSD Card (32GB or above), microSD Card Reader"),(0,r.kt)("li",{parentName:"ul"},"Serial Cable (Micro USB - USB)")),(0,r.kt)("h2",{id:"2-adjust-sd-partitions"},"2. Adjust SD partitions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Make three partitions on your SD card")),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ sudo fdisk /dev/sda\n"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Format partitions into corresponding file systems")),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ sudo mkfs.vfat /dev/sda1 -n EFI\n$ sudo mkfs.ext4 /dev/sda2\n$ sudo mkfs.ext4 /dev/sda3\n"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Expand the third partition")),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ sudo e2fsck -f /dev/sda3\n$ sudo resize2fs /dev/sda3\n"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Label the partition with a name")),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ sudo e2label /dev/sda2 BOOT\n$ sudo e2label /dev/sda3 ROOT\n"))),(0,r.kt)("h2",{id:"3-add-content-to-the-partitions"},"3. Add content to the partitions"),(0,r.kt)("h3",{id:"step-1-copy-firmware-into-efi-partition"},"Step 1: Copy firmware into EFI partition"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You can get firmware form source code please refer to\n",(0,r.kt)("a",{parentName:"li",href:"https://github.com/sophgo/sophgo-doc/blob/main/SG2042/HowTo/How%20to%20build%20SG2042%20bsp.rst"},"https://github.com/sophgo/sophgo-doc/blob/main/SG2042/HowTo/How%20to%20build%20SG2042%20bsp.rst"))),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# get the following folders:\n.\n\u251c\u2500\u2500 fip.bin\n\u251c\u2500\u2500 riscv64\n\u2502   \u251c\u2500\u2500 fw_jump.bin\n\u2502   \u251c\u2500\u2500 initrd.img\n\u2502   \u251c\u2500\u2500 mango-milkv-pioneer.dtb\n\u2502   \u251c\u2500\u2500 mango-sophgo-pisces.dtb\n\u2502   \u251c\u2500\u2500 mango-sophgo-x4evb.dtb\n\u2502   \u251c\u2500\u2500 mango-sophgo-x8evb.dtb\n\u2502   \u2514\u2500\u2500 riscv64_Image\n\u2514\u2500\u2500 zsbl.bin\n"))),(0,r.kt)("h3",{id:"step-2-create-root-partition-content"},"Step 2: Create ROOT partition content"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If you have anolis os RV-root.ext4 file, use the ",(0,r.kt)("inlineCode",{parentName:"li"},"dd")," command to\ncopy the ",(0,r.kt)("inlineCode",{parentName:"li"},"RV-root.ext4")," to the ROOT partition")),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ sudo dd if=RV-root.ext4 of=/dev/sda3 bs=4M status=progress\n"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Or if you have anolis os rootfs directory ,copy it into the ROOT\npartition"),(0,r.kt)("li",{parentName:"ul"},"Copy kernel-6.5.31.riscv64.rpm into ROOT/home directory and mount\nBOOT partition to the boot directory of ROOT partition"),(0,r.kt)("li",{parentName:"ul"},"Change ROOT partition to root directly and modify system partition\nmounting information")),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ vim /etc/fstab\n"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"fstab contents as following:")),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"LABEL=ROOT   /       ext4    defaults,noatime,x-systemd.device-timeout=300s,x-systemd.mount-timeout=300s 0 0\nLABEL=BOOT   /boot       ext4    defaults,noatime,x-systemd.device-timeout=300s,x-systemd.mount-timeout=300s 0 0\n"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Install the kernel")),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ rpm -ivh --force /home/kernel-6.5.31.riscv64.rpm\n"))),(0,r.kt)("h3",{id:"step-3-enter-boot-partition-and-add-boot-file"},"Step 3: Enter BOOT partition and add boot file"),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"$ mkdir extlinux && cd extlinux\n$ vim exitlinux.conf\n"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"exitlinux.conf contents as following:")),(0,r.kt)("blockquote",null,(0,r.kt)("pre",{parentName:"blockquote"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"default anolis_sophgo\nmenu title linuxboot menu\nprompt 0\ntimeout 50\n\nlabel anolis_sophgo\n   menu label anolis Sophgo in SD\n   linux /vmlinuz-$kernel_version\n   initrd /initramfs-$kernel_version.img \n   append  console=ttyS0,115200 root=LABEL=ROOT rootfstype=ext4 rootwait rw earlycon selinux=0 LANG=en_US.UTF-8 nvme.use_threaded_interrupts=1 nvme_core.io_timeout=3000\n"))),(0,r.kt)("h2",{id:"4-boot-from-microsd-card"},"4. Boot from microSD Card"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Plug the microSD Card into the SG2042 EVB, connect the serial cable\nto your computer, and power on the EVB."),(0,r.kt)("li",{parentName:"ul"},"Enter the username ",(0,r.kt)("inlineCode",{parentName:"li"},"anuser")," and the password ",(0,r.kt)("inlineCode",{parentName:"li"},"anolisos"),"."),(0,r.kt)("li",{parentName:"ul"},"Any operation needs the ",(0,r.kt)("inlineCode",{parentName:"li"},"sudo")," privilege.")))}c.isMDXComponent=!0}}]);