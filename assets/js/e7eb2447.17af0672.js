"use strict";(self.webpackChunksophgo_wiki_1=self.webpackChunksophgo_wiki_1||[]).push([[481],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},f="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),f=s(n),d=o,m=f["".concat(c,".").concat(d)]||f[d]||u[d]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[f]="string"==typeof e?e:o,a[1]=l;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1565:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={},a="SG2042 Boot Flow",l={unversionedId:"sg2042/bootflow",id:"sg2042/bootflow",title:"SG2042 Boot Flow",description:"1.  Fip.bin",source:"@site/docs/sg2042/bootflow.md",sourceDirName:"sg2042",slug:"/sg2042/bootflow",permalink:"/SG2042-Wiki/docs/sg2042/bootflow",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"techSidebar",previous:{title:"How to build and config GRUB2",permalink:"/SG2042-Wiki/docs/sg2042/How to build and config grub2"}},c={},s=[],p={toc:s},f="wrapper";function u(e){let{components:t,...i}=e;return(0,o.kt)(f,(0,r.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"sg2042-boot-flow"},"SG2042 Boot Flow"),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(2141).Z,width:"849",height:"1482"})),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Fip.bin"),(0,o.kt)("li",{parentName:"ol"},"ZSBL (Zero Stage Bootloader): Code in the ROM of the board to\ninitial DDR, CPU and Ethernet. Then load OpneSBI and U-Boot."),(0,o.kt)("li",{parentName:"ol"},"OpenSBI (RISC-V Open Source Supervisor Binary Interface): The goal\nof the OpenSBI project is to provide an open-source reference\nimplementation of the RISC-V SBI specifications for\nplatform-specific firmwares executing in M-mode. An OpenSBI\nimplementation can be easily extended by RISC-V platform and\nsystem-on-chip vendors to fit a particular hardware configuration."),(0,o.kt)("li",{parentName:"ol"},"conf.ini: configuration file used to choose next bootloader."),(0,o.kt)("li",{parentName:"ol"},"LinuxBoot: LinuxBoot is a firmware for modern servers that replaces\nspecific firmware functionality like the UEFI DXE phase with a Linux\nkernel and runtime."),(0,o.kt)("li",{parentName:"ol"},"U-Boot (Universal Bootloader): Its primary role is to facilitate the\nbooting process of the embedded device."),(0,o.kt)("li",{parentName:"ol"},"GRUB2 (GRand Unified Bootloader version 2): It is responsible for\nloading and transferring control to an operating system kernel\nsoftware (such as Linux or GNU Mach). The kernel, in turn,\ninitializes the rest of the operating system (e.g. a GNU system)."),(0,o.kt)("li",{parentName:"ol"},"Kernel")))}u.isMDXComponent=!0},2141:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/bootflow-aa14e2e7fcdc520a41fd8ed19a94f9a6.png"}}]);